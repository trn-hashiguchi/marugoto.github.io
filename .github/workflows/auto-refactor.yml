name: Auto Refactor PR (Gemini - Vertex AI)

on:
  schedule:
    # JST 朝9時（月曜）= UTC 00:00 Monday
    - cron: "0 0 * * 1"
  workflow_dispatch:
    inputs:
      base_branch:
        description: "PRの宛先ブランチ（例: develop / main）"
        required: false
        default: "develop"

permissions:
  contents: write
  pull-requests: write

jobs:
  refactor:
    runs-on: ubuntu-latest
    env:
      BASE_BRANCH_DEFAULT: develop
      # ★ Project/Location は Secrets か Repository Variables から供給
      GCP_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
      GCP_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}

      # 任意: 入力モード（既存スクリプト互換） 'full' or 'patch'
      # 未指定ならスクリプト側デフォルト ('full')
      # LLM_INPUT_MODE: patch

      # 任意: モデルを上書きしたい場合
      # GEMINI_MODEL: gemini-2.5-pro
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Decide BASE_BRANCH
        run: |
          if [ -n "${{ github.event.inputs.base_branch }}" ]; then
            echo "BASE_BRANCH=${{ github.event.inputs.base_branch }}" >> $GITHUB_ENV
          else
            echo "BASE_BRANCH=${BASE_BRANCH_DEFAULT}" >> $GITHUB_ENV
          fi
          echo "Using BASE_BRANCH=$BASE_BRANCH"

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      - name: Install dependencies (google-genai)
        run: |
          python -m pip install --upgrade pip
          python -m pip install "google-genai>=1.30.0"
        # ★ Vertex AI バックエンドでの認証（GCP_SA_KEY は Base64 済みを想定）
      - name: Configure Vertex AI with Service Account
        shell: bash
        run: |
          set -euo pipefail

          if [ -z "${{ secrets.GCP_SA_KEY || '' }}" ]; then
          echo "::error::GCP_SA_KEY（Base64エンコード済み）を Secrets に設定してください"; exit 1;
          fi

          # Base64 をデコードして SA キーを展開
          printf '%s' "${{ secrets.GCP_SA_KEY }}" | base64 -d > "${HOME}/gcp_sa.json"

          echo "GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcp_sa.json" >> "$GITHUB_ENV"
          echo "GOOGLE_GENAI_USE_VERTEXAI=true" >> "$GITHUB_ENV"

          P="${{ env.GCP_PROJECT_ID }}"
          L="${{ env.GCP_LOCATION }}"
          if [ -z "$P" ]; then echo "::error::GOOGLE_CLOUD_PROJECT が空です（Secrets/Vars を設定）"; exit 1; fi
          if [ -z "$L" ]; then L="us-central1"; fi  # 既定を us-central1 に
          echo "GOOGLE_CLOUD_PROJECT=$P" >> "$GITHUB_ENV"
          echo "GOOGLE_CLOUD_LOCATION=$L" >> "$GITHUB_ENV"

      - name: Run refactor (Python, ADC/Vertex)
        env:
          BASE_BRANCH: ${{ env.BASE_BRANCH }}
        run: python .github/scripts/gemini_refactor.py

      - name: Create Pull Request if needed
        if: env.NEED_PR == '1'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ env.PR_TITLE }}
          PR_BODY: ${{ env.PR_BODY }}
          NEW_BRANCH: ${{ env.NEW_BRANCH }}
          BASE_BRANCH: ${{ env.BASE_BRANCH }}
        run: |
          git push -u origin "$NEW_BRANCH"
          gh pr create --base "$BASE_BRANCH" --head "$NEW_BRANCH" --title "$PR_TITLE" --body "$PR_BODY"
