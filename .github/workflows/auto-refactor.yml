name: Auto Refactor PR (Gemini)

on:
  schedule:
    # JST 朝9時(月曜) = UTC 00:00 Monday
    - cron: "0 0 * * 1"
  workflow_dispatch:
    inputs:
      base_branch:
        description: "PRの宛先ブランチ（例: develop / main）"
        required: false
        default: "develop"

permissions:
  contents: write
  pull-requests: write

jobs:
  refactor:
    runs-on: ubuntu-latest
    env:
      BASE_BRANCH_DEFAULT: develop
      # GCP/Vertex AI settings
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp_sa.json
      GOOGLE_GENAI_USE_VERTEXAI: true
      GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
      GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - name: Decide BASE_BRANCH
        run: |
          if [ -n "${{ github.event.inputs.base_branch }}" ]; then
            echo "BASE_BRANCH=${{ github.event.inputs.base_branch }}" >> $GITHUB_ENV
          else
            echo "BASE_BRANCH=${BASE_BRANCH_DEFAULT}" >> $GITHUB_ENV
          fi
          echo "Using BASE_BRANCH=$BASE_BRANCH"

      - name: Setup Node.js (for gemini CLI)
        uses: actions/setup-node@v4
        with: { node-version: "20" }

      - name: Install Gemini CLI
        run: npm i -g @google/gemini-cli || npm i -g gemini-cli

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: "3.12" }

      # 認証
      - name: Decode GCP SA key
        run: echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}

      - name: Run Gemini refactor analysis (Python)
        env:
          BASE_BRANCH: ${{ env.BASE_BRANCH }}
        run: python .github/scripts/gemini_refactor.py

      - name: Create Pull Request if needed
        if: env.NEED_PR == '1'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PR_TITLE: ${{ env.PR_TITLE }}
          PR_BODY: ${{ env.PR_BODY }}
          NEW_BRANCH: ${{ env.NEW_BRANCH }}
          BASE_BRANCH: ${{ env.BASE_BRANCH }}
        run: |
          git push -u origin "$NEW_BRANCH"
          gh pr create --base "$BASE_BRANCH" --head "$NEW_BRANCH" --title "$PR_TITLE" --body "$PR_BODY"
