name: LLM Review and Auto-suggest PR

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

permissions:
  contents: write      # ブランチ作成/pushに必要
  pull-requests: write # PRへのコメント投稿/作成に必要

concurrency:
  group: llm-review-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  run_llm_review:
    name: Run LLM Review
    runs-on: ubuntu-latest
    outputs:
      needs_pr: ${{ steps.review.outputs.needs_pr }}
    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/sa-key.json
      GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
      GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
      GEMINI_MODEL: ${{ secrets.GEMINI_MODEL }}
      LLM_REVIEW_OUTPUT: llm_review_result.json # 出力はJSONに変更
      LLM_INPUT_MODE: full
      DIFF_CONTEXT: "3"

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with: { python-version: "3.10" }

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('.github/ci/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r .github/ci/requirements.txt

      - name: Decode GCP SA key
        run: echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > sa-key.json

      - name: Run LLM review and generate suggestions
        id: review # stepにIDを付与してoutputを参照可能に
        run: python .github/ci/review_with_llm.py

      - name: Upload review result
        uses: actions/upload-artifact@v4
        with:
          name: llm-review-result
          path: llm_review_result.json # JSONをアップロード
          retention-days: 7

  create_suggestion_pr:
    name: Create Suggestion PR
    runs-on: ubuntu-latest
    needs: [run_llm_review]
    if: needs.run_llm_review.outputs.needs_pr == '1' && github.event_name == 'pull_request'

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Download review result
        uses: actions/download-artifact@v4
        with:
          name: llm-review-result
          path: .

      - name: Apply patch and create PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HEAD_REF: ${{ github.event.pull_request.head.ref }}
        run: |
          set -e
          # JSONからdiffとrationaleを抽出
          DIFF_CONTENT=$(jq -r .diff llm_review_result.json)
          RATIONALE=$(jq -r .rationale llm_review_result.json)
          
          # 新しいブランチを作成
          SUGGESTION_BRANCH="llm-fix/${HEAD_REF}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b "$SUGGESTION_BRANCH"
          
          # diffを適用
          echo "$DIFF_CONTENT" | git apply --index --reject --whitespace=fix -
          if ! git diff --cached --quiet; then
            git commit -m "fix: Apply LLM suggestions" -m "$RATIONALE"
            git push -u origin "$SUGGESTION_BRANCH" --force
            
            # 元のPRブランチに向けてPRを作成
            gh pr create \
              --base "$HEAD_REF" \
              --head "$SUGGESTION_BRANCH" \
              --title "✨ LLMによる修正提案" \
              --body "AIによる自動レビューの結果、以下の修正を提案します。

              ### 修正理由
              $RATIONALE

              内容を確認し、問題なければこのPRをマージしてください."
          else
            echo "diffを適用しましたが、ステージングされた変更がありません."
          fi

  post_comment_to_pr:
    name: Post comment to PR
    runs-on: ubuntu-latest
    needs: [run_llm_review]
    if: ${{ github.event_name == 'pull_request' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download review result
        uses: actions/download-artifact@v4
        with:
          name: llm-review-result
          path: ./artifacts

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install -U pip
          pip install -r .github/ci/requirements.txt

      - name: Post comment to PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python .github/ci/post_comment_to_mr.py
