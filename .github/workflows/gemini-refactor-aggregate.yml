name: Gemini Refactor (Aggregate PR)

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: "ベースブランチ（デフォルト: develop）"
        required: false
        default: develop
      rating_threshold:
        description: "PRに含める最小リファクタレベル（1-5。デフォルト: 3）"
        required: false
        default: "3"
      include_globs:
        description: "対象とするglob（カンマ区切り）。未指定なら全ファイル候補から除外ルールで絞込"
        required: false
        default: ""
      exclude_globs:
        description: "除外glob（カンマ区切り）"
        required: false
        default: "build/**,dist/**,vendor/**,vender/**,node_modules/**,.git/**,.github/**,**/*.min.js,**/*.min.css,**/*.svg,**/*.png,**/*.jpg,**/*.jpeg,**/*.gif,**/*.pdf,**/*.zip,**/*.gz,**/*.tgz,**/*.jar,**/*.lock,**/package-lock.json,**/pnpm-lock.yaml,**/yarn.lock,**/package.json,**/.DS_Store,**/__pycache__/**,coverage/**"
      dry_run:
        description: "true の場合は結果のみ表示してコミット/PRを作らない"
        required: false
        default: "false"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: gemini-refactor-aggregate-${{ github.ref }}
  cancel-in-progress: true

jobs:
  refactor:
    name: Aggregate refactor & open single PR
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
      GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
      GEMINI_MODEL: ${{ secrets.GEMINI_MODEL }}
      GOOGLE_GENAI_USE_VERTEXAI: "true"

      TARGET_BRANCH: ${{ github.event.inputs.target_branch || 'develop' }}
      LLM_RATING_THRESHOLD: ${{ github.event.inputs.rating_threshold || '3' }}
      LLM_INCLUDE_GLOBS: ${{ github.event.inputs.include_globs || '' }}
      LLM_EXCLUDE_GLOBS: ${{ github.event.inputs.exclude_globs || '' }}
      LLM_DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git author (github-actions[bot])
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Setup Node (for Gemini CLI)
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Gemini CLI
        run: |
          npm install -g @google/gemini-cli
          gemini --version

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-refactor-${{ hashFiles('.github/ci/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install Python deps (google-genai, requests, pathspec)
        run: |
          python -m pip install -U pip
          if [ -f ".github/ci/requirements.txt" ]; then
            pip install -r .github/ci/requirements.txt
          else
            pip install "google-genai>=1.4.0" "requests==2.32.3"
          fi
          pip install "pathspec==0.12.1"

      - name: Decode GCP SA key (Base64 -> file)
        run: echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > "$GITHUB_WORKSPACE/sa-key.json"

      - name: Export auth env (Vertex AI / CLI)
        run: |
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/sa-key.json" >> $GITHUB_ENV
          echo "GEMINI_API_KEY=" >> $GITHUB_ENV
          if [ -n "${{ secrets.GOOGLE_API_KEY }}" ]; then
            echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> $GITHUB_ENV
          fi

      - name: Run aggregate refactor
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python .github/ci/gemini_refactor_aggregate.py
