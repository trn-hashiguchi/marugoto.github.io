name: Gemini Refactor (per file)

on:
  workflow_dispatch:
    inputs:
      target_branch:
        description: "Refactor対象ブランチ"
        required: false
        default: "develop"
      rating_threshold:
        description: "PR作成の最小リファクタレベル(1-5)"
        required: false
        default: "3"
      max_prs:
        description: "1回の実行で作成するPR上限"
        required: false
        default: "10"
      include_globs:
        description: "カンマ区切りincludeパターン（gitignore互換）。未指定なら全追跡ファイル"
        required: false
        default: ""
      exclude_globs:
        description: "カンマ区切りexcludeパターン（gitignore互換）"
        required: false
        default: "build/**,dist/**,vendor/**,vender/**,node_modules/**,.git/**,.github/**,**/*.min.js,**/*.min.css,**/*.svg,**/*.png,**/*.jpg,**/*.jpeg,**/*.gif,**/*.pdf,**/*.zip,**/*.gz,**/*.tgz,**/*.jar,**/*.lock,**/package-lock.json,**/pnpm-lock.yaml,**/yarn.lock,**/package.json,**/.DS_Store,**/__pycache__/**,coverage/**"
      dry_run:
        description: "trueでPRを作らずログのみ"
        required: false
        default: "false"

permissions:
  contents: write
  pull-requests: write

jobs:
  refactor_each_file:
    runs-on: ubuntu-latest
    env:
      GOOGLE_CLOUD_PROJECT: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
      GOOGLE_CLOUD_LOCATION: ${{ secrets.GOOGLE_CLOUD_LOCATION }}
      GEMINI_MODEL: ${{ secrets.GEMINI_MODEL }} # 例: gemini-2.5-pro
      GOOGLE_GENAI_USE_VERTEXAI: "true"
      # Vertex利用時は GEMINI_API_KEY を未設定にする（競合回避）
      LLM_RATING_THRESHOLD: ${{ github.event.inputs.rating_threshold || '3' }}
      LLM_MAX_PRS: ${{ github.event.inputs.max_prs || '10' }}
      LLM_INCLUDE_GLOBS: ${{ github.event.inputs.include_globs || '' }}
      LLM_EXCLUDE_GLOBS: ${{ github.event.inputs.exclude_globs }}
      LLM_DRY_RUN: ${{ github.event.inputs.dry_run || 'false' }}
      TARGET_BRANCH: ${{ github.event.inputs.target_branch || 'develop' }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.target_branch || 'develop' }}
          fetch-depth: 0

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Gemini CLI
        run: |
          npm install -g @google/gemini-cli
          gemini --version
        # 非対話/スクリプト運用に対応（-p/STDIN）。Vertex AI 認証も可。:contentReference[oaicite:5]{index=5}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-gemini-refactor-${{ hashFiles('.github/ci/requirements-refactor.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install Python deps
        run: |
          python -m pip install -U pip
          pip install -r .github/ci/requirements-refactor.txt

      - name: Decode GCP SA key (Base64 -> file)
        run: echo "${{ secrets.GCP_SA_KEY }}" | base64 -d > sa-key.json

      - name: Export ADC env
        run: |
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GITHUB_WORKSPACE/sa-key.json" >> $GITHUB_ENV
          echo "GOOGLE_CLOUD_LOCATION=${GOOGLE_CLOUD_LOCATION:-global}" >> $GITHUB_ENV
          # Vertex 利用時は競合回避のため GEMINI_API_KEY を明示的にunset
          echo "GEMINI_API_KEY=" >> $GITHUB_ENV

      - name: Run per-file refactor (open PRs as needed)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: python .github/ci/gemini_refactor_each_file.py
